"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/index";
exports.ids = ["pages/index"];
exports.modules = {

/***/ "./src/client/components/CreateTodoForm.tsx":
/*!**************************************************!*\
  !*** ./src/client/components/CreateTodoForm.tsx ***!
  \**************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"CreateTodoForm\": () => (/* binding */ CreateTodoForm)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _utils_client_api__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/utils/client/api */ \"./src/utils/client/api.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_utils_client_api__WEBPACK_IMPORTED_MODULE_2__]);\n_utils_client_api__WEBPACK_IMPORTED_MODULE_2__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n/**\r\n * QUESTION 1:\r\n * -----------\r\n * Style the \"Add\" button so that it looks like the design in Figma.\r\n *\r\n * NOTE: You must use tailwindcss and className. Do not use other methods (eg.\r\n * inline styles, separate css files, css modules, etc.) unless absolutely\r\n * necessary. This applies to all styling-related questions in this assignment.\r\n *\r\n * Documentation references:\r\n *  - https://tailwindcss.com\r\n *  - https://www.youtube.com/watch?v=mr15Xzb1Ook\r\n *\r\n *\r\n *\r\n * QUESTION 2:\r\n * -----------\r\n * Currently our form is not keyboard accessible. Users cannot hit\r\n * <Enter> right after typing to submit the form (add new todo). Fix this issue.\r\n */ const CreateTodoForm = ()=>{\n    const [todoBody, setTodoBody] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const apiContext = _utils_client_api__WEBPACK_IMPORTED_MODULE_2__.api.useContext();\n    const { mutate: createTodo , isLoading: isCreatingTodo  } = _utils_client_api__WEBPACK_IMPORTED_MODULE_2__.api.todo.create.useMutation({\n        onSuccess: ()=>{\n            apiContext.todo.getAll.refetch();\n        }\n    });\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"form\", {\n        className: \"group flex items-center justify-between rounded-12 border border-gray-200 py-2 pr-4 focus-within:border-gray-400\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                htmlFor: TODO_INPUT_ID,\n                className: \"sr-only\",\n                children: \"Add todo\"\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\votru\\\\OneDrive\\\\Documents\\\\GitHub\\\\TNP-FrontEnd-MinhNhat\\\\src\\\\client\\\\components\\\\CreateTodoForm.tsx\",\n                lineNumber: 40,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                id: TODO_INPUT_ID,\n                type: \"text\",\n                placeholder: \"Add todo\",\n                value: todoBody,\n                onChange: (e)=>{\n                    setTodoBody(e.target.value);\n                },\n                onKeyDown: (e)=>{\n                    if (e.key == \"Enter\") {\n                        createTodo({\n                            body: todoBody\n                        });\n                        setTodoBody(\"\");\n                        e.preventDefault();\n                    }\n                },\n                className: \"flex-1 px-4 text-base placeholder:text-gray-400 focus:outline-none\"\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\votru\\\\OneDrive\\\\Documents\\\\GitHub\\\\TNP-FrontEnd-MinhNhat\\\\src\\\\client\\\\components\\\\CreateTodoForm.tsx\",\n                lineNumber: 43,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                className: \"h-[36px] w-[67px] rounded-[18px] bg-gray-700 text-white\",\n                type: \"button\",\n                disabled: isCreatingTodo,\n                onClick: ()=>{\n                    createTodo({\n                        body: todoBody\n                    });\n                    setTodoBody(\"\");\n                },\n                children: \"Add\"\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\votru\\\\OneDrive\\\\Documents\\\\GitHub\\\\TNP-FrontEnd-MinhNhat\\\\src\\\\client\\\\components\\\\CreateTodoForm.tsx\",\n                lineNumber: 63,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\votru\\\\OneDrive\\\\Documents\\\\GitHub\\\\TNP-FrontEnd-MinhNhat\\\\src\\\\client\\\\components\\\\CreateTodoForm.tsx\",\n        lineNumber: 39,\n        columnNumber: 5\n    }, undefined);\n};\nconst TODO_INPUT_ID = \"todo-input-id\";\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY2xpZW50L2NvbXBvbmVudHMvQ3JlYXRlVG9kb0Zvcm0udHN4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBZ0M7QUFFUTtBQUV4Qzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztDQW1CQyxHQUVNLE1BQU1FLGlCQUFpQixJQUFNO0lBQ2xDLE1BQU0sQ0FBQ0MsVUFBVUMsWUFBWSxHQUFHSiwrQ0FBUUEsQ0FBQztJQUV6QyxNQUFNSyxhQUFhSiw2REFBYztJQUVqQyxNQUFNLEVBQUVNLFFBQVFDLFdBQVUsRUFBRUMsV0FBV0MsZUFBYyxFQUFFLEdBQ3JEVCwwRUFBMkIsQ0FBQztRQUMxQmEsV0FBVyxJQUFNO1lBQ2ZULFdBQVdNLElBQUksQ0FBQ0ksTUFBTSxDQUFDQyxPQUFPO1FBQ2hDO0lBQ0Y7SUFFRixxQkFDRSw4REFBQ0M7UUFBS0MsV0FBVTs7MEJBQ2QsOERBQUNDO2dCQUFNQyxTQUFTQztnQkFBZUgsV0FBVTswQkFBVTs7Ozs7OzBCQUduRCw4REFBQ0k7Z0JBQ0NDLElBQUlGO2dCQUNKRyxNQUFLO2dCQUNMQyxhQUFZO2dCQUNaQyxPQUFPdkI7Z0JBQ1B3QixVQUFVLENBQUNDLElBQU07b0JBQ2Z4QixZQUFZd0IsRUFBRUMsTUFBTSxDQUFDSCxLQUFLO2dCQUM1QjtnQkFDQUksV0FBVyxDQUFDRixJQUFNO29CQUNoQixJQUFJQSxFQUFFRyxHQUFHLElBQUksU0FBUzt3QkFDcEJ2QixXQUFXOzRCQUNUd0IsTUFBTTdCO3dCQUNSO3dCQUNBQyxZQUFZO3dCQUNad0IsRUFBRUssY0FBYztvQkFDbEIsQ0FBQztnQkFDSDtnQkFDQWYsV0FBVTs7Ozs7OzBCQUdaLDhEQUFDZ0I7Z0JBQ0NoQixXQUFVO2dCQUNWTSxNQUFLO2dCQUNMVyxVQUFVekI7Z0JBQ1YwQixTQUFTLElBQU07b0JBQ2I1QixXQUFXO3dCQUNUd0IsTUFBTTdCO29CQUNSO29CQUNBQyxZQUFZO2dCQUNkOzBCQUNEOzs7Ozs7Ozs7Ozs7QUFLUCxFQUFDO0FBRUQsTUFBTWlCLGdCQUFnQiIsInNvdXJjZXMiOlsid2VicGFjazovL3RucC1mcm9udGVuZC1pbnRlcnZpZXcvLi9zcmMvY2xpZW50L2NvbXBvbmVudHMvQ3JlYXRlVG9kb0Zvcm0udHN4PzQ1OTEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCdcclxuXHJcbmltcG9ydCB7IGFwaSB9IGZyb20gJ0AvdXRpbHMvY2xpZW50L2FwaSdcclxuXHJcbi8qKlxyXG4gKiBRVUVTVElPTiAxOlxyXG4gKiAtLS0tLS0tLS0tLVxyXG4gKiBTdHlsZSB0aGUgXCJBZGRcIiBidXR0b24gc28gdGhhdCBpdCBsb29rcyBsaWtlIHRoZSBkZXNpZ24gaW4gRmlnbWEuXHJcbiAqXHJcbiAqIE5PVEU6IFlvdSBtdXN0IHVzZSB0YWlsd2luZGNzcyBhbmQgY2xhc3NOYW1lLiBEbyBub3QgdXNlIG90aGVyIG1ldGhvZHMgKGVnLlxyXG4gKiBpbmxpbmUgc3R5bGVzLCBzZXBhcmF0ZSBjc3MgZmlsZXMsIGNzcyBtb2R1bGVzLCBldGMuKSB1bmxlc3MgYWJzb2x1dGVseVxyXG4gKiBuZWNlc3NhcnkuIFRoaXMgYXBwbGllcyB0byBhbGwgc3R5bGluZy1yZWxhdGVkIHF1ZXN0aW9ucyBpbiB0aGlzIGFzc2lnbm1lbnQuXHJcbiAqXHJcbiAqIERvY3VtZW50YXRpb24gcmVmZXJlbmNlczpcclxuICogIC0gaHR0cHM6Ly90YWlsd2luZGNzcy5jb21cclxuICogIC0gaHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1tcjE1WHpiMU9va1xyXG4gKlxyXG4gKlxyXG4gKlxyXG4gKiBRVUVTVElPTiAyOlxyXG4gKiAtLS0tLS0tLS0tLVxyXG4gKiBDdXJyZW50bHkgb3VyIGZvcm0gaXMgbm90IGtleWJvYXJkIGFjY2Vzc2libGUuIFVzZXJzIGNhbm5vdCBoaXRcclxuICogPEVudGVyPiByaWdodCBhZnRlciB0eXBpbmcgdG8gc3VibWl0IHRoZSBmb3JtIChhZGQgbmV3IHRvZG8pLiBGaXggdGhpcyBpc3N1ZS5cclxuICovXHJcblxyXG5leHBvcnQgY29uc3QgQ3JlYXRlVG9kb0Zvcm0gPSAoKSA9PiB7XHJcbiAgY29uc3QgW3RvZG9Cb2R5LCBzZXRUb2RvQm9keV0gPSB1c2VTdGF0ZSgnJylcclxuXHJcbiAgY29uc3QgYXBpQ29udGV4dCA9IGFwaS51c2VDb250ZXh0KClcclxuXHJcbiAgY29uc3QgeyBtdXRhdGU6IGNyZWF0ZVRvZG8sIGlzTG9hZGluZzogaXNDcmVhdGluZ1RvZG8gfSA9XHJcbiAgICBhcGkudG9kby5jcmVhdGUudXNlTXV0YXRpb24oe1xyXG4gICAgICBvblN1Y2Nlc3M6ICgpID0+IHtcclxuICAgICAgICBhcGlDb250ZXh0LnRvZG8uZ2V0QWxsLnJlZmV0Y2goKVxyXG4gICAgICB9LFxyXG4gICAgfSlcclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDxmb3JtIGNsYXNzTmFtZT1cImdyb3VwIGZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktYmV0d2VlbiByb3VuZGVkLTEyIGJvcmRlciBib3JkZXItZ3JheS0yMDAgcHktMiBwci00IGZvY3VzLXdpdGhpbjpib3JkZXItZ3JheS00MDBcIj5cclxuICAgICAgPGxhYmVsIGh0bWxGb3I9e1RPRE9fSU5QVVRfSUR9IGNsYXNzTmFtZT1cInNyLW9ubHlcIj5cclxuICAgICAgICBBZGQgdG9kb1xyXG4gICAgICA8L2xhYmVsPlxyXG4gICAgICA8aW5wdXRcclxuICAgICAgICBpZD17VE9ET19JTlBVVF9JRH1cclxuICAgICAgICB0eXBlPVwidGV4dFwiXHJcbiAgICAgICAgcGxhY2Vob2xkZXI9XCJBZGQgdG9kb1wiXHJcbiAgICAgICAgdmFsdWU9e3RvZG9Cb2R5fVxyXG4gICAgICAgIG9uQ2hhbmdlPXsoZSkgPT4ge1xyXG4gICAgICAgICAgc2V0VG9kb0JvZHkoZS50YXJnZXQudmFsdWUpXHJcbiAgICAgICAgfX1cclxuICAgICAgICBvbktleURvd249eyhlKSA9PiB7XHJcbiAgICAgICAgICBpZiAoZS5rZXkgPT0gJ0VudGVyJykge1xyXG4gICAgICAgICAgICBjcmVhdGVUb2RvKHtcclxuICAgICAgICAgICAgICBib2R5OiB0b2RvQm9keSxcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgc2V0VG9kb0JvZHkoJycpXHJcbiAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH19XHJcbiAgICAgICAgY2xhc3NOYW1lPVwiZmxleC0xIHB4LTQgdGV4dC1iYXNlIHBsYWNlaG9sZGVyOnRleHQtZ3JheS00MDAgZm9jdXM6b3V0bGluZS1ub25lXCJcclxuICAgICAgLz5cclxuXHJcbiAgICAgIDxidXR0b25cclxuICAgICAgICBjbGFzc05hbWU9XCJoLVszNnB4XSB3LVs2N3B4XSByb3VuZGVkLVsxOHB4XSBiZy1ncmF5LTcwMCB0ZXh0LXdoaXRlXCJcclxuICAgICAgICB0eXBlPVwiYnV0dG9uXCJcclxuICAgICAgICBkaXNhYmxlZD17aXNDcmVhdGluZ1RvZG99XHJcbiAgICAgICAgb25DbGljaz17KCkgPT4ge1xyXG4gICAgICAgICAgY3JlYXRlVG9kbyh7XHJcbiAgICAgICAgICAgIGJvZHk6IHRvZG9Cb2R5LFxyXG4gICAgICAgICAgfSlcclxuICAgICAgICAgIHNldFRvZG9Cb2R5KCcnKVxyXG4gICAgICAgIH19XHJcbiAgICAgID5cclxuICAgICAgICBBZGRcclxuICAgICAgPC9idXR0b24+XHJcbiAgICA8L2Zvcm0+XHJcbiAgKVxyXG59XHJcblxyXG5jb25zdCBUT0RPX0lOUFVUX0lEID0gJ3RvZG8taW5wdXQtaWQnXHJcbiJdLCJuYW1lcyI6WyJ1c2VTdGF0ZSIsImFwaSIsIkNyZWF0ZVRvZG9Gb3JtIiwidG9kb0JvZHkiLCJzZXRUb2RvQm9keSIsImFwaUNvbnRleHQiLCJ1c2VDb250ZXh0IiwibXV0YXRlIiwiY3JlYXRlVG9kbyIsImlzTG9hZGluZyIsImlzQ3JlYXRpbmdUb2RvIiwidG9kbyIsImNyZWF0ZSIsInVzZU11dGF0aW9uIiwib25TdWNjZXNzIiwiZ2V0QWxsIiwicmVmZXRjaCIsImZvcm0iLCJjbGFzc05hbWUiLCJsYWJlbCIsImh0bWxGb3IiLCJUT0RPX0lOUFVUX0lEIiwiaW5wdXQiLCJpZCIsInR5cGUiLCJwbGFjZWhvbGRlciIsInZhbHVlIiwib25DaGFuZ2UiLCJlIiwidGFyZ2V0Iiwib25LZXlEb3duIiwia2V5IiwiYm9keSIsInByZXZlbnREZWZhdWx0IiwiYnV0dG9uIiwiZGlzYWJsZWQiLCJvbkNsaWNrIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/client/components/CreateTodoForm.tsx\n");

/***/ }),

/***/ "./src/client/components/TodoList.tsx":
/*!********************************************!*\
  !*** ./src/client/components/TodoList.tsx ***!
  \********************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TodoList\": () => (/* binding */ TodoList)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _radix_ui_react_checkbox__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @radix-ui/react-checkbox */ \"@radix-ui/react-checkbox\");\n/* harmony import */ var _formkit_auto_animate_react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @formkit/auto-animate/react */ \"@formkit/auto-animate/react\");\n/* harmony import */ var _utils_client_api__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/utils/client/api */ \"./src/utils/client/api.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_radix_ui_react_checkbox__WEBPACK_IMPORTED_MODULE_2__, _formkit_auto_animate_react__WEBPACK_IMPORTED_MODULE_3__, _utils_client_api__WEBPACK_IMPORTED_MODULE_4__]);\n([_radix_ui_react_checkbox__WEBPACK_IMPORTED_MODULE_2__, _formkit_auto_animate_react__WEBPACK_IMPORTED_MODULE_3__, _utils_client_api__WEBPACK_IMPORTED_MODULE_4__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\n/**\r\n * QUESTION 3:\r\n * -----------\r\n * A todo has 2 statuses: \"pending\" and \"completed\"\r\n *  - \"pending\" state is represented by an unchecked checkbox\r\n *  - \"completed\" state is represented by a checked checkbox, darker background,\r\n *    and a line-through text\r\n *\r\n * We have 2 backend apis:\r\n *  - (1) `api.todo.getAll`       -> a query to get all todos\r\n *  - (2) `api.todoStatus.update` -> a mutation to update a todo's status\r\n *\r\n * Example usage for (1) is right below inside the TodoList component. For (2),\r\n * you can find similar usage (`api.todo.create`) in src/client/components/CreateTodoForm.tsx\r\n *\r\n * If you use VSCode as your editor , you should have intellisense for the apis'\r\n * input. If not, you can find their signatures in:\r\n *  - (1) src/server/api/routers/todo-router.ts\r\n *  - (2) src/server/api/routers/todo-status-router.ts\r\n *\r\n * Your tasks are:\r\n *  - Use TRPC to connect the todos' statuses to the backend apis\r\n *  - Style each todo item to reflect its status base on the design on Figma\r\n *\r\n * Documentation references:\r\n *  - https://trpc.io/docs/client/react/useQuery\r\n *  - https://trpc.io/docs/client/react/useMutation\r\n *\r\n *\r\n *\r\n *\r\n *\r\n * QUESTION 4:\r\n * -----------\r\n * Implement UI to delete a todo. The UI should look like the design on Figma\r\n *\r\n * The backend api to delete a todo is `api.todo.delete`. You can find the api\r\n * signature in src/server/api/routers/todo-router.ts\r\n *\r\n * NOTES:\r\n *  - Use the XMarkIcon component below for the delete icon button. Note that\r\n *  the icon button should be accessible\r\n *  - deleted todo should be removed from the UI without page refresh\r\n *\r\n * Documentation references:\r\n *  - https://www.sarasoueidan.com/blog/accessible-icon-buttons\r\n *\r\n *\r\n *\r\n *\r\n *\r\n * QUESTION 5:\r\n * -----------\r\n * Animate your todo list using @formkit/auto-animate package\r\n *\r\n * Documentation references:\r\n *  - https://auto-animate.formkit.com\r\n */ const TodoList = ()=>{\n    const { data: todos = []  } = _utils_client_api__WEBPACK_IMPORTED_MODULE_4__.api.todo.getAll.useQuery({\n        statuses: [\n            \"completed\",\n            \"pending\"\n        ]\n    }, {\n        refetchOnWindowFocus: false\n    });\n    const [isFirst, setisFirst] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const apiContext = _utils_client_api__WEBPACK_IMPORTED_MODULE_4__.api.useContext();\n    const [animationParent] = (0,_formkit_auto_animate_react__WEBPACK_IMPORTED_MODULE_3__.useAutoAnimate)();\n    const { mutate: updateToDo  } = _utils_client_api__WEBPACK_IMPORTED_MODULE_4__.api.todoStatus.update.useMutation({\n        onSuccess: ()=>{\n            setisFirst(false);\n            switch(selected){\n                case \"all\":\n                    apiContext.todo.getAll.fetch({\n                        statuses: [\n                            \"completed\",\n                            \"pending\"\n                        ]\n                    }).then((value)=>{\n                        setToDo1(value);\n                    });\n                    setSelected(\"all\");\n                    break;\n                case \"completed\":\n                    apiContext.todo.getAll.fetch({\n                        statuses: [\n                            \"completed\"\n                        ]\n                    }).then((value)=>{\n                        setToDo1(value);\n                    });\n                    setSelected(\"completed\");\n                    break;\n                case \"pending\":\n                    apiContext.todo.getAll.fetch({\n                        statuses: [\n                            \"pending\"\n                        ]\n                    }).then((value)=>{\n                        setToDo1(value);\n                    });\n                    setSelected(\"pending\");\n                    break;\n                default:\n                    break;\n            }\n        }\n    });\n    const { mutate: deleteToDo  } = _utils_client_api__WEBPACK_IMPORTED_MODULE_4__.api.todo[\"delete\"].useMutation({\n        onSuccess: ()=>{\n            setisFirst(false);\n            // apiContext.todo.getAll.refetch().then((value) => {\n            //   setToDo1(todos);\n            // });\n            apiContext.todo.getAll.fetch({\n                statuses: [\n                    \"completed\",\n                    \"pending\"\n                ]\n            }).then((value)=>{\n                setToDo1(value);\n            });\n            setSelected(\"all\");\n        }\n    });\n    const [selected, setSelected] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"all\");\n    const [todos1, setToDo1] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(_utils_client_api__WEBPACK_IMPORTED_MODULE_4__.api.todo.getAll.useQuery({\n        statuses: [\n            \"completed\",\n            \"pending\"\n        ]\n    }, {\n        refetchOnWindowFocus: false\n    }).data ?? todos);\n    function changeData(item) {\n        setisFirst(false);\n        switch(item){\n            case \"all\":\n                apiContext.todo.getAll.fetch({\n                    statuses: [\n                        \"completed\",\n                        \"pending\"\n                    ]\n                }).then((value)=>{\n                    setToDo1(value);\n                });\n                break;\n            case \"completed\":\n                apiContext.todo.getAll.fetch({\n                    statuses: [\n                        \"completed\"\n                    ]\n                }).then((value)=>{\n                    setToDo1(value);\n                });\n                break;\n            case \"pending\":\n                apiContext.todo.getAll.fetch({\n                    statuses: [\n                        \"pending\"\n                    ]\n                }).then((value)=>{\n                    setToDo1(value);\n                });\n                break;\n            default:\n                break;\n        }\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        \"data-has-animation\": true,\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"mb-[10px]\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        className: selected == \"all\" ? \"mr-[10px]  h-[35px]  rounded-[18px]  border-2 border-solid  bg-gray-700 pl-[20px]  pr-[20px] font-bold text-white\" : \"mr-[10px]  h-[35px]  rounded-[18px]  border-2 border-solid border-[#e2e8f0] pl-[20px] pr-[20px]  font-bold text-[#334155]\",\n                        type: \"button\",\n                        onClick: ()=>{\n                            setSelected(\"all\");\n                            changeData(\"all\");\n                        },\n                        children: \"All\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\votru\\\\OneDrive\\\\Documents\\\\GitHub\\\\TNP-FrontEnd-MinhNhat\\\\src\\\\client\\\\components\\\\TodoList.tsx\",\n                        lineNumber: 201,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        className: selected == \"pending\" ? \"mr-[10px]  h-[35px]  rounded-[18px]  border-2 border-solid  bg-gray-700 pl-[20px]  pr-[20px] font-bold text-white\" : \"mr-[10px]  h-[35px]  rounded-[18px]  border-2 border-solid border-[#e2e8f0] pl-[20px] pr-[20px]  font-bold text-[#334155]\",\n                        type: \"button\",\n                        onClick: ()=>{\n                            setSelected(\"pending\");\n                            changeData(\"pending\");\n                        },\n                        children: \"Pending\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\votru\\\\OneDrive\\\\Documents\\\\GitHub\\\\TNP-FrontEnd-MinhNhat\\\\src\\\\client\\\\components\\\\TodoList.tsx\",\n                        lineNumber: 215,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        className: selected == \"completed\" ? \"mr-[10px]  h-[35px]  rounded-[18px]  border-2 border-solid  bg-gray-700 pl-[20px]  pr-[20px] font-bold text-white\" : \"mr-[10px]  h-[35px]  rounded-[18px]  border-2 border-solid border-[#e2e8f0] pl-[20px] pr-[20px]  font-bold text-[#334155]\",\n                        type: \"button\",\n                        onClick: ()=>{\n                            setSelected(\"completed\");\n                            changeData(\"completed\");\n                        },\n                        children: \"Completed\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\votru\\\\OneDrive\\\\Documents\\\\GitHub\\\\TNP-FrontEnd-MinhNhat\\\\src\\\\client\\\\components\\\\TodoList.tsx\",\n                        lineNumber: 229,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\votru\\\\OneDrive\\\\Documents\\\\GitHub\\\\TNP-FrontEnd-MinhNhat\\\\src\\\\client\\\\components\\\\TodoList.tsx\",\n                lineNumber: 200,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"ul\", {\n                className: \"grid grid-cols-1 gap-y-3\",\n                ref: animationParent,\n                children: isFirst ? todos.map((todo)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: todo.status == \"completed\" ? \"flex items-center rounded-12 border border-gray-200 bg-[#f8fafc] px-4 py-3 shadow-sm\" : \"flex items-center rounded-12 border border-gray-200 px-4 py-3 shadow-sm \",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_radix_ui_react_checkbox__WEBPACK_IMPORTED_MODULE_2__.Root, {\n                                    checked: todo.status != \"pending\",\n                                    id: String(todo.id),\n                                    onCheckedChange: (e)=>{\n                                        updateToDo({\n                                            status: e == true ? \"completed\" : \"pending\",\n                                            todoId: todo.id\n                                        });\n                                    },\n                                    className: \"flex h-6 w-6 items-center justify-center rounded-6 border border-gray-300 focus:border-gray-700 focus:outline-none data-[state=checked]:border-gray-700 data-[state=checked]:bg-gray-700\",\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_radix_ui_react_checkbox__WEBPACK_IMPORTED_MODULE_2__.Indicator, {\n                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(CheckIcon, {\n                                            className: \"h-4 w-4 text-white\"\n                                        }, void 0, false, {\n                                            fileName: \"C:\\\\Users\\\\votru\\\\OneDrive\\\\Documents\\\\GitHub\\\\TNP-FrontEnd-MinhNhat\\\\src\\\\client\\\\components\\\\TodoList.tsx\",\n                                            lineNumber: 267,\n                                            columnNumber: 23\n                                        }, undefined)\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\votru\\\\OneDrive\\\\Documents\\\\GitHub\\\\TNP-FrontEnd-MinhNhat\\\\src\\\\client\\\\components\\\\TodoList.tsx\",\n                                        lineNumber: 266,\n                                        columnNumber: 21\n                                    }, undefined)\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\votru\\\\OneDrive\\\\Documents\\\\GitHub\\\\TNP-FrontEnd-MinhNhat\\\\src\\\\client\\\\components\\\\TodoList.tsx\",\n                                    lineNumber: 255,\n                                    columnNumber: 19\n                                }, undefined),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                    htmlFor: String(todo.id),\n                                    className: todo.status == \"completed\" ? \"block pl-3 font-medium text-[#64748b] line-through\" : \"block pl-3 font-medium\",\n                                    children: todo.body\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\votru\\\\OneDrive\\\\Documents\\\\GitHub\\\\TNP-FrontEnd-MinhNhat\\\\src\\\\client\\\\components\\\\TodoList.tsx\",\n                                    lineNumber: 271,\n                                    columnNumber: 19\n                                }, undefined),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                    name: \"Delete\",\n                                    \"aria-label\": \"Delete\",\n                                    id: \"menu-trigger\",\n                                    className: \"ml-auto mr-0\",\n                                    onClick: ()=>{\n                                        deleteToDo({\n                                            id: todo.id\n                                        });\n                                    },\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                        viewBox: \"0 0 32 32\",\n                                        width: \"32px\",\n                                        height: \"32px\",\n                                        \"aria-hidden\": \"true\",\n                                        focusable: \"false\",\n                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(XMarkIcon, {}, void 0, false, {\n                                            fileName: \"C:\\\\Users\\\\votru\\\\OneDrive\\\\Documents\\\\GitHub\\\\TNP-FrontEnd-MinhNhat\\\\src\\\\client\\\\components\\\\TodoList.tsx\",\n                                            lineNumber: 299,\n                                            columnNumber: 23\n                                        }, undefined)\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\votru\\\\OneDrive\\\\Documents\\\\GitHub\\\\TNP-FrontEnd-MinhNhat\\\\src\\\\client\\\\components\\\\TodoList.tsx\",\n                                        lineNumber: 292,\n                                        columnNumber: 21\n                                    }, undefined)\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\votru\\\\OneDrive\\\\Documents\\\\GitHub\\\\TNP-FrontEnd-MinhNhat\\\\src\\\\client\\\\components\\\\TodoList.tsx\",\n                                    lineNumber: 281,\n                                    columnNumber: 19\n                                }, undefined)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"C:\\\\Users\\\\votru\\\\OneDrive\\\\Documents\\\\GitHub\\\\TNP-FrontEnd-MinhNhat\\\\src\\\\client\\\\components\\\\TodoList.tsx\",\n                            lineNumber: 248,\n                            columnNumber: 17\n                        }, undefined)\n                    }, todo.id, false, {\n                        fileName: \"C:\\\\Users\\\\votru\\\\OneDrive\\\\Documents\\\\GitHub\\\\TNP-FrontEnd-MinhNhat\\\\src\\\\client\\\\components\\\\TodoList.tsx\",\n                        lineNumber: 247,\n                        columnNumber: 15\n                    }, undefined)) : todos1.map((todo)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: todo.status == \"completed\" ? \"flex items-center rounded-12 border border-gray-200 bg-[#f8fafc] px-4 py-3 shadow-sm\" : \"flex items-center rounded-12 border border-gray-200 px-4 py-3 shadow-sm \",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_radix_ui_react_checkbox__WEBPACK_IMPORTED_MODULE_2__.Root, {\n                                    checked: todo.status != \"pending\",\n                                    id: String(todo.id),\n                                    onCheckedChange: (e)=>{\n                                        updateToDo({\n                                            status: e == true ? \"completed\" : \"pending\",\n                                            todoId: todo.id\n                                        });\n                                    },\n                                    className: \"flex h-6 w-6 items-center justify-center rounded-6 border border-gray-300 focus:border-gray-700 focus:outline-none data-[state=checked]:border-gray-700 data-[state=checked]:bg-gray-700\",\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_radix_ui_react_checkbox__WEBPACK_IMPORTED_MODULE_2__.Indicator, {\n                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(CheckIcon, {\n                                            className: \"h-4 w-4 text-white\"\n                                        }, void 0, false, {\n                                            fileName: \"C:\\\\Users\\\\votru\\\\OneDrive\\\\Documents\\\\GitHub\\\\TNP-FrontEnd-MinhNhat\\\\src\\\\client\\\\components\\\\TodoList.tsx\",\n                                            lineNumber: 326,\n                                            columnNumber: 23\n                                        }, undefined)\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\votru\\\\OneDrive\\\\Documents\\\\GitHub\\\\TNP-FrontEnd-MinhNhat\\\\src\\\\client\\\\components\\\\TodoList.tsx\",\n                                        lineNumber: 325,\n                                        columnNumber: 21\n                                    }, undefined)\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\votru\\\\OneDrive\\\\Documents\\\\GitHub\\\\TNP-FrontEnd-MinhNhat\\\\src\\\\client\\\\components\\\\TodoList.tsx\",\n                                    lineNumber: 314,\n                                    columnNumber: 19\n                                }, undefined),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                    htmlFor: String(todo.id),\n                                    className: todo.status == \"completed\" ? \"block pl-3 font-medium text-[#64748b] line-through\" : \"block pl-3 font-medium\",\n                                    children: todo.body\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\votru\\\\OneDrive\\\\Documents\\\\GitHub\\\\TNP-FrontEnd-MinhNhat\\\\src\\\\client\\\\components\\\\TodoList.tsx\",\n                                    lineNumber: 330,\n                                    columnNumber: 19\n                                }, undefined),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                    name: \"Delete\",\n                                    \"aria-label\": \"Delete\",\n                                    id: \"menu-trigger\",\n                                    className: \"ml-auto mr-0\",\n                                    onClick: ()=>{\n                                        deleteToDo({\n                                            id: todo.id\n                                        });\n                                    },\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                        viewBox: \"0 0 32 32\",\n                                        width: \"32px\",\n                                        height: \"32px\",\n                                        \"aria-hidden\": \"true\",\n                                        focusable: \"false\",\n                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(XMarkIcon, {}, void 0, false, {\n                                            fileName: \"C:\\\\Users\\\\votru\\\\OneDrive\\\\Documents\\\\GitHub\\\\TNP-FrontEnd-MinhNhat\\\\src\\\\client\\\\components\\\\TodoList.tsx\",\n                                            lineNumber: 358,\n                                            columnNumber: 23\n                                        }, undefined)\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\votru\\\\OneDrive\\\\Documents\\\\GitHub\\\\TNP-FrontEnd-MinhNhat\\\\src\\\\client\\\\components\\\\TodoList.tsx\",\n                                        lineNumber: 351,\n                                        columnNumber: 21\n                                    }, undefined)\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\votru\\\\OneDrive\\\\Documents\\\\GitHub\\\\TNP-FrontEnd-MinhNhat\\\\src\\\\client\\\\components\\\\TodoList.tsx\",\n                                    lineNumber: 340,\n                                    columnNumber: 19\n                                }, undefined)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"C:\\\\Users\\\\votru\\\\OneDrive\\\\Documents\\\\GitHub\\\\TNP-FrontEnd-MinhNhat\\\\src\\\\client\\\\components\\\\TodoList.tsx\",\n                            lineNumber: 307,\n                            columnNumber: 17\n                        }, undefined)\n                    }, todo.id, false, {\n                        fileName: \"C:\\\\Users\\\\votru\\\\OneDrive\\\\Documents\\\\GitHub\\\\TNP-FrontEnd-MinhNhat\\\\src\\\\client\\\\components\\\\TodoList.tsx\",\n                        lineNumber: 306,\n                        columnNumber: 15\n                    }, undefined))\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\votru\\\\OneDrive\\\\Documents\\\\GitHub\\\\TNP-FrontEnd-MinhNhat\\\\src\\\\client\\\\components\\\\TodoList.tsx\",\n                lineNumber: 244,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\votru\\\\OneDrive\\\\Documents\\\\GitHub\\\\TNP-FrontEnd-MinhNhat\\\\src\\\\client\\\\components\\\\TodoList.tsx\",\n        lineNumber: 199,\n        columnNumber: 5\n    }, undefined);\n};\nconst XMarkIcon = (props)=>{\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        fill: \"none\",\n        viewBox: \"0 0 24 24\",\n        strokeWidth: 1.5,\n        stroke: \"currentColor\",\n        ...props,\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            d: \"M6 18L18 6M6 6l12 12\"\n        }, void 0, false, {\n            fileName: \"C:\\\\Users\\\\votru\\\\OneDrive\\\\Documents\\\\GitHub\\\\TNP-FrontEnd-MinhNhat\\\\src\\\\client\\\\components\\\\TodoList.tsx\",\n            lineNumber: 379,\n            columnNumber: 7\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\votru\\\\OneDrive\\\\Documents\\\\GitHub\\\\TNP-FrontEnd-MinhNhat\\\\src\\\\client\\\\components\\\\TodoList.tsx\",\n        lineNumber: 371,\n        columnNumber: 5\n    }, undefined);\n};\nconst CheckIcon = (props)=>{\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        fill: \"none\",\n        viewBox: \"0 0 24 24\",\n        strokeWidth: 1.5,\n        stroke: \"currentColor\",\n        ...props,\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            d: \"M4.5 12.75l6 6 9-13.5\"\n        }, void 0, false, {\n            fileName: \"C:\\\\Users\\\\votru\\\\OneDrive\\\\Documents\\\\GitHub\\\\TNP-FrontEnd-MinhNhat\\\\src\\\\client\\\\components\\\\TodoList.tsx\",\n            lineNumber: 398,\n            columnNumber: 7\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\votru\\\\OneDrive\\\\Documents\\\\GitHub\\\\TNP-FrontEnd-MinhNhat\\\\src\\\\client\\\\components\\\\TodoList.tsx\",\n        lineNumber: 390,\n        columnNumber: 5\n    }, undefined);\n};\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/client/components/TodoList.tsx\n");

/***/ }),

/***/ "./src/pages/index.tsx":
/*!*****************************!*\
  !*** ./src/pages/index.tsx ***!
  \*****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _client_components_CreateTodoForm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/client/components/CreateTodoForm */ \"./src/client/components/CreateTodoForm.tsx\");\n/* harmony import */ var _client_components_TodoList__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/client/components/TodoList */ \"./src/client/components/TodoList.tsx\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_client_components_CreateTodoForm__WEBPACK_IMPORTED_MODULE_1__, _client_components_TodoList__WEBPACK_IMPORTED_MODULE_2__]);\n([_client_components_CreateTodoForm__WEBPACK_IMPORTED_MODULE_1__, _client_components_TodoList__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n/**\r\n * QUESTION 6:\r\n * -----------\r\n * Implement quick filter/tab feature so that we can quickly find todos with\r\n * different statuses (\"pending\", \"completed\", or both). The UI should look like\r\n * the design on Figma.\r\n *\r\n * NOTE:\r\n *  - For this question, you must use RadixUI Tabs component. Its Documentation\r\n *  is linked below.\r\n *\r\n * Documentation references:\r\n *  - https://www.radix-ui.com/docs/primitives/components/tabs\r\n */ const Index = ()=>{\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"main\", {\n        className: \"mx-auto w-[480px] pt-12\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"rounded-12 bg-white p-8 shadow-sm\",\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n                    className: \"text-center text-4xl font-extrabold text-gray-900\",\n                    children: \"Todo App\"\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\votru\\\\OneDrive\\\\Documents\\\\GitHub\\\\TNP-FrontEnd-MinhNhat\\\\src\\\\pages\\\\index.tsx\",\n                    lineNumber: 23,\n                    columnNumber: 9\n                }, undefined),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"pt-10\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_client_components_TodoList__WEBPACK_IMPORTED_MODULE_2__.TodoList, {}, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\votru\\\\OneDrive\\\\Documents\\\\GitHub\\\\TNP-FrontEnd-MinhNhat\\\\src\\\\pages\\\\index.tsx\",\n                        lineNumber: 28,\n                        columnNumber: 11\n                    }, undefined)\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\votru\\\\OneDrive\\\\Documents\\\\GitHub\\\\TNP-FrontEnd-MinhNhat\\\\src\\\\pages\\\\index.tsx\",\n                    lineNumber: 27,\n                    columnNumber: 9\n                }, undefined),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"pt-10\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_client_components_CreateTodoForm__WEBPACK_IMPORTED_MODULE_1__.CreateTodoForm, {}, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\votru\\\\OneDrive\\\\Documents\\\\GitHub\\\\TNP-FrontEnd-MinhNhat\\\\src\\\\pages\\\\index.tsx\",\n                        lineNumber: 32,\n                        columnNumber: 11\n                    }, undefined)\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\votru\\\\OneDrive\\\\Documents\\\\GitHub\\\\TNP-FrontEnd-MinhNhat\\\\src\\\\pages\\\\index.tsx\",\n                    lineNumber: 31,\n                    columnNumber: 9\n                }, undefined)\n            ]\n        }, void 0, true, {\n            fileName: \"C:\\\\Users\\\\votru\\\\OneDrive\\\\Documents\\\\GitHub\\\\TNP-FrontEnd-MinhNhat\\\\src\\\\pages\\\\index.tsx\",\n            lineNumber: 22,\n            columnNumber: 7\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\votru\\\\OneDrive\\\\Documents\\\\GitHub\\\\TNP-FrontEnd-MinhNhat\\\\src\\\\pages\\\\index.tsx\",\n        lineNumber: 21,\n        columnNumber: 5\n    }, undefined);\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Index);\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcGFnZXMvaW5kZXgudHN4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFtRTtBQUNaO0FBRXZEOzs7Ozs7Ozs7Ozs7O0NBYUMsR0FFRCxNQUFNRSxRQUFRLElBQU07SUFDbEIscUJBQ0UsOERBQUNDO1FBQUtDLFdBQVU7a0JBQ2QsNEVBQUNDO1lBQUlELFdBQVU7OzhCQUNiLDhEQUFDRTtvQkFBR0YsV0FBVTs4QkFBb0Q7Ozs7Ozs4QkFJbEUsOERBQUNDO29CQUFJRCxXQUFVOzhCQUNiLDRFQUFDSCxpRUFBUUE7Ozs7Ozs7Ozs7OEJBR1gsOERBQUNJO29CQUFJRCxXQUFVOzhCQUNiLDRFQUFDSiw2RUFBY0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUt6QjtBQUVBLGlFQUFlRSxLQUFLQSxFQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdG5wLWZyb250ZW5kLWludGVydmlldy8uL3NyYy9wYWdlcy9pbmRleC50c3g/MTlhMCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDcmVhdGVUb2RvRm9ybSB9IGZyb20gJ0AvY2xpZW50L2NvbXBvbmVudHMvQ3JlYXRlVG9kb0Zvcm0nXHJcbmltcG9ydCB7IFRvZG9MaXN0IH0gZnJvbSAnQC9jbGllbnQvY29tcG9uZW50cy9Ub2RvTGlzdCdcclxuXHJcbi8qKlxyXG4gKiBRVUVTVElPTiA2OlxyXG4gKiAtLS0tLS0tLS0tLVxyXG4gKiBJbXBsZW1lbnQgcXVpY2sgZmlsdGVyL3RhYiBmZWF0dXJlIHNvIHRoYXQgd2UgY2FuIHF1aWNrbHkgZmluZCB0b2RvcyB3aXRoXHJcbiAqIGRpZmZlcmVudCBzdGF0dXNlcyAoXCJwZW5kaW5nXCIsIFwiY29tcGxldGVkXCIsIG9yIGJvdGgpLiBUaGUgVUkgc2hvdWxkIGxvb2sgbGlrZVxyXG4gKiB0aGUgZGVzaWduIG9uIEZpZ21hLlxyXG4gKlxyXG4gKiBOT1RFOlxyXG4gKiAgLSBGb3IgdGhpcyBxdWVzdGlvbiwgeW91IG11c3QgdXNlIFJhZGl4VUkgVGFicyBjb21wb25lbnQuIEl0cyBEb2N1bWVudGF0aW9uXHJcbiAqICBpcyBsaW5rZWQgYmVsb3cuXHJcbiAqXHJcbiAqIERvY3VtZW50YXRpb24gcmVmZXJlbmNlczpcclxuICogIC0gaHR0cHM6Ly93d3cucmFkaXgtdWkuY29tL2RvY3MvcHJpbWl0aXZlcy9jb21wb25lbnRzL3RhYnNcclxuICovXHJcblxyXG5jb25zdCBJbmRleCA9ICgpID0+IHtcclxuICByZXR1cm4gKFxyXG4gICAgPG1haW4gY2xhc3NOYW1lPVwibXgtYXV0byB3LVs0ODBweF0gcHQtMTJcIj5cclxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJyb3VuZGVkLTEyIGJnLXdoaXRlIHAtOCBzaGFkb3ctc21cIj5cclxuICAgICAgICA8aDEgY2xhc3NOYW1lPVwidGV4dC1jZW50ZXIgdGV4dC00eGwgZm9udC1leHRyYWJvbGQgdGV4dC1ncmF5LTkwMFwiPlxyXG4gICAgICAgICAgVG9kbyBBcHBcclxuICAgICAgICA8L2gxPlxyXG5cclxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInB0LTEwXCI+XHJcbiAgICAgICAgICA8VG9kb0xpc3QgLz5cclxuICAgICAgICA8L2Rpdj5cclxuXHJcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJwdC0xMFwiPlxyXG4gICAgICAgICAgPENyZWF0ZVRvZG9Gb3JtIC8+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgIDwvZGl2PlxyXG4gICAgPC9tYWluPlxyXG4gIClcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgSW5kZXhcclxuIl0sIm5hbWVzIjpbIkNyZWF0ZVRvZG9Gb3JtIiwiVG9kb0xpc3QiLCJJbmRleCIsIm1haW4iLCJjbGFzc05hbWUiLCJkaXYiLCJoMSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/pages/index.tsx\n");

/***/ }),

/***/ "./src/utils/client/api.ts":
/*!*********************************!*\
  !*** ./src/utils/client/api.ts ***!
  \*********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"api\": () => (/* binding */ api)\n/* harmony export */ });\n/* harmony import */ var _trpc_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @trpc/client */ \"@trpc/client\");\n/* harmony import */ var _trpc_next__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @trpc/next */ \"./node_modules/@trpc/next/dist/index.mjs\");\n/* harmony import */ var superjson__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! superjson */ \"superjson\");\n/* harmony import */ var superjson__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(superjson__WEBPACK_IMPORTED_MODULE_2__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_trpc_client__WEBPACK_IMPORTED_MODULE_0__, _trpc_next__WEBPACK_IMPORTED_MODULE_1__]);\n([_trpc_client__WEBPACK_IMPORTED_MODULE_0__, _trpc_next__WEBPACK_IMPORTED_MODULE_1__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n/**\r\n * This is the client-side entrypoint for your tRPC API. It is used to create the `api` object which\r\n * contains the Next.js App-wrapper, as well as your type-safe React Query hooks.\r\n *\r\n * We also create a few inference helpers for input and output types.\r\n */ \n\n\nconst getBaseUrl = ()=>{\n    if (false) {} // browser should use relative url\n    if (process.env.VERCEL_URL) {\n        return `https://${process.env.VERCEL_URL}`;\n    } // SSR should use vercel url\n    return `http://localhost:${process.env.PORT ?? 3000}` // dev SSR should use localhost\n    ;\n};\n/** A set of type-safe react-query hooks for your tRPC API. */ const api = (0,_trpc_next__WEBPACK_IMPORTED_MODULE_1__.createTRPCNext)({\n    config () {\n        return {\n            /**\r\n       * Transformer used for data de-serialization from the server.\r\n       *\r\n       * @see https://trpc.io/docs/data-transformers\r\n       */ transformer: (superjson__WEBPACK_IMPORTED_MODULE_2___default()),\n            /**\r\n       * Links used to determine request flow from client to server.\r\n       *\r\n       * @see https://trpc.io/docs/links\r\n       */ links: [\n                (0,_trpc_client__WEBPACK_IMPORTED_MODULE_0__.loggerLink)({\n                    enabled: (opts)=> true || 0\n                }),\n                (0,_trpc_client__WEBPACK_IMPORTED_MODULE_0__.httpBatchLink)({\n                    url: `${getBaseUrl()}/api/trpc`\n                })\n            ]\n        };\n    },\n    /**\r\n   * Whether tRPC should await queries when server rendering pages.\r\n   *\r\n   * @see https://trpc.io/docs/nextjs#ssr-boolean-default-false\r\n   */ ssr: false\n});\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdXRpbHMvY2xpZW50L2FwaS50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBOzs7OztDQUtDLEdBSXVEO0FBQ2I7QUFDVjtBQUVqQyxNQUFNSSxhQUFhLElBQU07SUFDdkIsSUFBSSxLQUFrQixFQUFhLEVBRWxDLENBQUMsa0NBQWtDO0lBQ3BDLElBQUlDLFFBQVFDLEdBQUcsQ0FBQ0MsVUFBVSxFQUFFO1FBQzFCLE9BQU8sQ0FBQyxRQUFRLEVBQUVGLFFBQVFDLEdBQUcsQ0FBQ0MsVUFBVSxDQUFDLENBQUM7SUFDNUMsQ0FBQyxDQUFDLDRCQUE0QjtJQUM5QixPQUFPLENBQUMsaUJBQWlCLEVBQUVGLFFBQVFDLEdBQUcsQ0FBQ0UsSUFBSSxJQUFJLEtBQUssQ0FBQyxDQUFDLCtCQUErQjs7QUFDdkY7QUFFQSw0REFBNEQsR0FDckQsTUFBTUMsTUFBTVAsMERBQWNBLENBQVk7SUFDM0NRLFVBQVM7UUFDUCxPQUFPO1lBQ0w7Ozs7T0FJQyxHQUNEQyxhQUFhUixrREFBU0E7WUFFdEI7Ozs7T0FJQyxHQUNEUyxPQUFPO2dCQUNMWCx3REFBVUEsQ0FBQztvQkFDVFksU0FBUyxDQUFDQyxPQUNSVCxLQUF5QixJQUN4QlMsQ0FBeURHO2dCQUM5RDtnQkFDQWpCLDJEQUFhQSxDQUFDO29CQUNaa0IsS0FBSyxDQUFDLEVBQUVkLGFBQWEsU0FBUyxDQUFDO2dCQUNqQzthQUNEO1FBQ0g7SUFDRjtJQUNBOzs7O0dBSUMsR0FDRGUsS0FBSyxLQUFLO0FBQ1osR0FBRSIsInNvdXJjZXMiOlsid2VicGFjazovL3RucC1mcm9udGVuZC1pbnRlcnZpZXcvLi9zcmMvdXRpbHMvY2xpZW50L2FwaS50cz9lZTEzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBUaGlzIGlzIHRoZSBjbGllbnQtc2lkZSBlbnRyeXBvaW50IGZvciB5b3VyIHRSUEMgQVBJLiBJdCBpcyB1c2VkIHRvIGNyZWF0ZSB0aGUgYGFwaWAgb2JqZWN0IHdoaWNoXHJcbiAqIGNvbnRhaW5zIHRoZSBOZXh0LmpzIEFwcC13cmFwcGVyLCBhcyB3ZWxsIGFzIHlvdXIgdHlwZS1zYWZlIFJlYWN0IFF1ZXJ5IGhvb2tzLlxyXG4gKlxyXG4gKiBXZSBhbHNvIGNyZWF0ZSBhIGZldyBpbmZlcmVuY2UgaGVscGVycyBmb3IgaW5wdXQgYW5kIG91dHB1dCB0eXBlcy5cclxuICovXHJcbmltcG9ydCB0eXBlIHsgaW5mZXJSb3V0ZXJJbnB1dHMsIGluZmVyUm91dGVyT3V0cHV0cyB9IGZyb20gJ0B0cnBjL3NlcnZlcidcclxuaW1wb3J0IHR5cGUgeyBBcHBSb3V0ZXIgfSBmcm9tICdAL3NlcnZlci9hcGkvcm9vdCdcclxuXHJcbmltcG9ydCB7IGh0dHBCYXRjaExpbmssIGxvZ2dlckxpbmsgfSBmcm9tICdAdHJwYy9jbGllbnQnXHJcbmltcG9ydCB7IGNyZWF0ZVRSUENOZXh0IH0gZnJvbSAnQHRycGMvbmV4dCdcclxuaW1wb3J0IHN1cGVyanNvbiBmcm9tICdzdXBlcmpzb24nXHJcblxyXG5jb25zdCBnZXRCYXNlVXJsID0gKCkgPT4ge1xyXG4gIGlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJykge1xyXG4gICAgcmV0dXJuICcnXHJcbiAgfSAvLyBicm93c2VyIHNob3VsZCB1c2UgcmVsYXRpdmUgdXJsXHJcbiAgaWYgKHByb2Nlc3MuZW52LlZFUkNFTF9VUkwpIHtcclxuICAgIHJldHVybiBgaHR0cHM6Ly8ke3Byb2Nlc3MuZW52LlZFUkNFTF9VUkx9YFxyXG4gIH0gLy8gU1NSIHNob3VsZCB1c2UgdmVyY2VsIHVybFxyXG4gIHJldHVybiBgaHR0cDovL2xvY2FsaG9zdDoke3Byb2Nlc3MuZW52LlBPUlQgPz8gMzAwMH1gIC8vIGRldiBTU1Igc2hvdWxkIHVzZSBsb2NhbGhvc3RcclxufVxyXG5cclxuLyoqIEEgc2V0IG9mIHR5cGUtc2FmZSByZWFjdC1xdWVyeSBob29rcyBmb3IgeW91ciB0UlBDIEFQSS4gKi9cclxuZXhwb3J0IGNvbnN0IGFwaSA9IGNyZWF0ZVRSUENOZXh0PEFwcFJvdXRlcj4oe1xyXG4gIGNvbmZpZygpIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBUcmFuc2Zvcm1lciB1c2VkIGZvciBkYXRhIGRlLXNlcmlhbGl6YXRpb24gZnJvbSB0aGUgc2VydmVyLlxyXG4gICAgICAgKlxyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdHJwYy5pby9kb2NzL2RhdGEtdHJhbnNmb3JtZXJzXHJcbiAgICAgICAqL1xyXG4gICAgICB0cmFuc2Zvcm1lcjogc3VwZXJqc29uLFxyXG5cclxuICAgICAgLyoqXHJcbiAgICAgICAqIExpbmtzIHVzZWQgdG8gZGV0ZXJtaW5lIHJlcXVlc3QgZmxvdyBmcm9tIGNsaWVudCB0byBzZXJ2ZXIuXHJcbiAgICAgICAqXHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90cnBjLmlvL2RvY3MvbGlua3NcclxuICAgICAgICovXHJcbiAgICAgIGxpbmtzOiBbXHJcbiAgICAgICAgbG9nZ2VyTGluayh7XHJcbiAgICAgICAgICBlbmFibGVkOiAob3B0cykgPT5cclxuICAgICAgICAgICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdkZXZlbG9wbWVudCcgfHxcclxuICAgICAgICAgICAgKG9wdHMuZGlyZWN0aW9uID09PSAnZG93bicgJiYgb3B0cy5yZXN1bHQgaW5zdGFuY2VvZiBFcnJvciksXHJcbiAgICAgICAgfSksXHJcbiAgICAgICAgaHR0cEJhdGNoTGluayh7XHJcbiAgICAgICAgICB1cmw6IGAke2dldEJhc2VVcmwoKX0vYXBpL3RycGNgLFxyXG4gICAgICAgIH0pLFxyXG4gICAgICBdLFxyXG4gICAgfVxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogV2hldGhlciB0UlBDIHNob3VsZCBhd2FpdCBxdWVyaWVzIHdoZW4gc2VydmVyIHJlbmRlcmluZyBwYWdlcy5cclxuICAgKlxyXG4gICAqIEBzZWUgaHR0cHM6Ly90cnBjLmlvL2RvY3MvbmV4dGpzI3Nzci1ib29sZWFuLWRlZmF1bHQtZmFsc2VcclxuICAgKi9cclxuICBzc3I6IGZhbHNlLFxyXG59KVxyXG5cclxuLyoqXHJcbiAqIEluZmVyZW5jZSBoZWxwZXIgZm9yIGlucHV0cy5cclxuICpcclxuICogQGV4YW1wbGUgdHlwZSBIZWxsb0lucHV0ID0gUm91dGVySW5wdXRzWydleGFtcGxlJ11bJ2hlbGxvJ11cclxuICovXHJcbmV4cG9ydCB0eXBlIFJvdXRlcklucHV0cyA9IGluZmVyUm91dGVySW5wdXRzPEFwcFJvdXRlcj5cclxuXHJcbi8qKlxyXG4gKiBJbmZlcmVuY2UgaGVscGVyIGZvciBvdXRwdXRzLlxyXG4gKlxyXG4gKiBAZXhhbXBsZSB0eXBlIEhlbGxvT3V0cHV0ID0gUm91dGVyT3V0cHV0c1snZXhhbXBsZSddWydoZWxsbyddXHJcbiAqL1xyXG5leHBvcnQgdHlwZSBSb3V0ZXJPdXRwdXRzID0gaW5mZXJSb3V0ZXJPdXRwdXRzPEFwcFJvdXRlcj5cclxuIl0sIm5hbWVzIjpbImh0dHBCYXRjaExpbmsiLCJsb2dnZXJMaW5rIiwiY3JlYXRlVFJQQ05leHQiLCJzdXBlcmpzb24iLCJnZXRCYXNlVXJsIiwicHJvY2VzcyIsImVudiIsIlZFUkNFTF9VUkwiLCJQT1JUIiwiYXBpIiwiY29uZmlnIiwidHJhbnNmb3JtZXIiLCJsaW5rcyIsImVuYWJsZWQiLCJvcHRzIiwiZGlyZWN0aW9uIiwicmVzdWx0IiwiRXJyb3IiLCJ1cmwiLCJzc3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/utils/client/api.ts\n");

/***/ }),

/***/ "./node_modules/react/cjs/react-jsx-dev-runtime.development.js":
/*!*********************************************************************!*\
  !*** ./node_modules/react/cjs/react-jsx-dev-runtime.development.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\nvar React = __webpack_require__(/*! react */ \"react\");\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false; // Track which Fiber(s) schedule render work.\n\nvar REACT_MODULE_REFERENCE;\n\n{\n  REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');\n}\n\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === 'number') {\n      error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n        return getContextName(context) + '.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        var provider = type;\n        return getContextName(provider._context) + '.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n\n      // eslint-disable-next-line no-fallthrough\n    }\n  }\n\n  return null;\n}\n\nvar assign = Object.assign;\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if ( !fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  var control;\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n\n  try {\n    // This should throw.\n    if (construct) {\n      // Something should be setting the props in the constructor.\n      var Fake = function () {\n        throw Error();\n      }; // $FlowFixMe\n\n\n      Object.defineProperty(Fake.prototype, 'props', {\n        set: function () {\n          // We use a throwing setter instead of frozen or non-writable props\n          // because that won't throw in a non-strict mode function.\n          throw Error();\n        }\n      });\n\n      if (typeof Reflect === 'object' && Reflect.construct) {\n        // We construct a different control for this case to include any extra\n        // frames added by the construct call.\n        try {\n          Reflect.construct(Fake, []);\n        } catch (x) {\n          control = x;\n        }\n\n        Reflect.construct(fn, [], Fake);\n      } else {\n        try {\n          Fake.call();\n        } catch (x) {\n          control = x;\n        }\n\n        fn.call(Fake.prototype);\n      }\n    } else {\n      try {\n        throw Error();\n      } catch (x) {\n        control = x;\n      }\n\n      fn();\n    }\n  } catch (sample) {\n    // This is inlined manually because closure doesn't do it for us.\n    if (sample && control && typeof sample.stack === 'string') {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sample.stack.split('\\n');\n      var controlLines = control.stack.split('\\n');\n      var s = sampleLines.length - 1;\n      var c = controlLines.length - 1;\n\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n        // We expect at least one stack frame to be shared.\n        // Typically this will be the root most one. However, stack frames may be\n        // cut off due to maximum stack limits. In this case, one maybe cut off\n        // earlier than the other. We assume that the sample is longer or the same\n        // and there for cut off earlier. So we should find the root most frame in\n        // the sample somewhere in the control.\n        c--;\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar loggedTypeFailures = {};\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\n  {\n    // $FlowFixMe This is okay but Flow doesn't know it.\n    var has = Function.call.bind(hasOwnProperty);\n\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            // eslint-disable-next-line react-internal/prod-error-codes\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n        } catch (ex) {\n          error$1 = ex;\n        }\n\n        if (error$1 && !(error$1 instanceof Error)) {\n          setCurrentlyValidatingElement(element);\n\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\n\n          setCurrentlyValidatingElement(null);\n        }\n\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error$1.message] = true;\n          setCurrentlyValidatingElement(element);\n\n          error('Failed %s type: %s', location, error$1.message);\n\n          setCurrentlyValidatingElement(null);\n        }\n      }\n    }\n  }\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n/*\n * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';\n    return type;\n  }\n} // $FlowFixMe only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\nvar specialPropKeyWarningShown;\nvar specialPropRefWarningShown;\nvar didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingRef = function () {\n      if (!specialPropRefWarningShown) {\n        specialPropRefWarningShown = true;\n\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingRef.isReactWarning = true;\n    Object.defineProperty(props, 'ref', {\n      get: warnAboutAccessingRef,\n      configurable: true\n    });\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // self and source are DEV only properties.\n\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    }); // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\n\nfunction jsxDEV(type, config, maybeKey, source, self) {\n  {\n    var propName; // Reserved names are extracted\n\n    var props = {};\n    var key = null;\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n\n    if (maybeKey !== undefined) {\n      {\n        checkKeyStringCoercion(maybeKey);\n      }\n\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    if (hasValidRef(config)) {\n      ref = config.ref;\n      warnIfStringRefCannotBeAutoConverted(config, self);\n    } // Remaining properties are added to a new props object\n\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    } // Resolve default props\n\n\n    if (type && type.defaultProps) {\n      var defaultProps = type.defaultProps;\n\n      for (propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    }\n\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n\n    return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n  }\n}\n\nvar ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement$1(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n    }\n  }\n}\n\nvar propTypesMisspellWarningShown;\n\n{\n  propTypesMisspellWarningShown = false;\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\n\nfunction isValidElement(object) {\n  {\n    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    if (ReactCurrentOwner$1.current) {\n      var name = getComponentNameFromType(ReactCurrentOwner$1.current.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n\nfunction getSourceInfoErrorAddendum(source) {\n  {\n    if (source !== undefined) {\n      var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n      var lineNumber = source.lineNumber;\n      return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n    }\n\n    return '';\n  }\n}\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\n\n\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) {\n      // Give the component that originally created this child.\n      childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n    }\n\n    setCurrentlyValidatingElement$1(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement$1(null);\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object') {\n      return;\n    }\n\n    if (isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else if (node) {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n          var step;\n\n          while (!(step = iterator.next()).done) {\n            if (isValidElement(step.value)) {\n              validateExplicitKey(step.value, parentType);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\n\n\nfunction validatePropTypes(element) {\n  {\n    var type = element.type;\n\n    if (type === null || type === undefined || typeof type === 'string') {\n      return;\n    }\n\n    var propTypes;\n\n    if (typeof type === 'function') {\n      propTypes = type.propTypes;\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n    // Inner props are checked in the reconciler.\n    type.$$typeof === REACT_MEMO_TYPE)) {\n      propTypes = type.propTypes;\n    } else {\n      return;\n    }\n\n    if (propTypes) {\n      // Intentionally inside to avoid triggering lazy initializers:\n      var name = getComponentNameFromType(type);\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n\n      var _name = getComponentNameFromType(type);\n\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');\n    }\n\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n    }\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement$1(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement$1(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement$1(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement$1(null);\n    }\n  }\n}\n\nfunction jsxWithValidation(type, props, key, isStaticChildren, source, self) {\n  {\n    var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n    // succeed and there will likely be errors in render.\n\n    if (!validType) {\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var sourceInfo = getSourceInfoErrorAddendum(source);\n\n      if (sourceInfo) {\n        info += sourceInfo;\n      } else {\n        info += getDeclarationErrorAddendum();\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    }\n\n    var element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.\n    // TODO: Drop this when these are no longer allowed as the type argument.\n\n    if (element == null) {\n      return element;\n    } // Skip key warning if the type isn't valid since our key validation logic\n    // doesn't expect a non-string/function type and can throw confusing errors.\n    // We don't want exception behavior to differ between dev and prod.\n    // (Rendering will throw with a helpful message and as soon as the type is\n    // fixed, the key warnings will appear.)\n\n\n    if (validType) {\n      var children = props.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    }\n\n    if (type === REACT_FRAGMENT_TYPE) {\n      validateFragmentProps(element);\n    } else {\n      validatePropTypes(element);\n    }\n\n    return element;\n  }\n} // These two functions exist to still get child warnings in dev\n\nvar jsxDEV$1 =  jsxWithValidation ;\n\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsxDEV = jsxDEV$1;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react/cjs/react-jsx-dev-runtime.development.js\n");

/***/ }),

/***/ "./node_modules/react/jsx-dev-runtime.js":
/*!***********************************************!*\
  !*** ./node_modules/react/jsx-dev-runtime.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"./node_modules/react/cjs/react-jsx-dev-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsRUFBRSx1SkFBc0U7QUFDeEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90bnAtZnJvbnRlbmQtaW50ZXJ2aWV3Ly4vbm9kZV9tb2R1bGVzL3JlYWN0L2pzeC1kZXYtcnVudGltZS5qcz81Nzc3Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1qc3gtZGV2LXJ1bnRpbWUucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLmRldmVsb3BtZW50LmpzJyk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/react/jsx-dev-runtime.js\n");

/***/ }),

/***/ "react":
/*!************************!*\
  !*** external "react" ***!
  \************************/
/***/ ((module) => {

module.exports = require("react");

/***/ }),

/***/ "react-ssr-prepass":
/*!************************************!*\
  !*** external "react-ssr-prepass" ***!
  \************************************/
/***/ ((module) => {

module.exports = require("react-ssr-prepass");

/***/ }),

/***/ "superjson":
/*!****************************!*\
  !*** external "superjson" ***!
  \****************************/
/***/ ((module) => {

module.exports = require("superjson");

/***/ }),

/***/ "@formkit/auto-animate/react":
/*!**********************************************!*\
  !*** external "@formkit/auto-animate/react" ***!
  \**********************************************/
/***/ ((module) => {

module.exports = import("@formkit/auto-animate/react");;

/***/ }),

/***/ "@radix-ui/react-checkbox":
/*!*******************************************!*\
  !*** external "@radix-ui/react-checkbox" ***!
  \*******************************************/
/***/ ((module) => {

module.exports = import("@radix-ui/react-checkbox");;

/***/ }),

/***/ "@tanstack/react-query":
/*!****************************************!*\
  !*** external "@tanstack/react-query" ***!
  \****************************************/
/***/ ((module) => {

module.exports = import("@tanstack/react-query");;

/***/ }),

/***/ "@trpc/client":
/*!*******************************!*\
  !*** external "@trpc/client" ***!
  \*******************************/
/***/ ((module) => {

module.exports = import("@trpc/client");;

/***/ }),

/***/ "@trpc/react-query":
/*!************************************!*\
  !*** external "@trpc/react-query" ***!
  \************************************/
/***/ ((module) => {

module.exports = import("@trpc/react-query");;

/***/ }),

/***/ "@trpc/react-query/shared":
/*!*******************************************!*\
  !*** external "@trpc/react-query/shared" ***!
  \*******************************************/
/***/ ((module) => {

module.exports = import("@trpc/react-query/shared");;

/***/ }),

/***/ "@trpc/server/shared":
/*!**************************************!*\
  !*** external "@trpc/server/shared" ***!
  \**************************************/
/***/ ((module) => {

module.exports = import("@trpc/server/shared");;

/***/ }),

/***/ "./node_modules/@trpc/next/dist/index.mjs":
/*!************************************************!*\
  !*** ./node_modules/@trpc/next/dist/index.mjs ***!
  \************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createTRPCNext\": () => (/* binding */ createTRPCNext),\n/* harmony export */   \"withTRPC\": () => (/* binding */ withTRPC)\n/* harmony export */ });\n/* harmony import */ var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tanstack/react-query */ \"@tanstack/react-query\");\n/* harmony import */ var _trpc_react_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @trpc/react-query */ \"@trpc/react-query\");\n/* harmony import */ var _trpc_react_query_shared__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @trpc/react-query/shared */ \"@trpc/react-query/shared\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react_ssr_prepass__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-ssr-prepass */ \"react-ssr-prepass\");\n/* harmony import */ var _trpc_server_shared__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @trpc/server/shared */ \"@trpc/server/shared\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_tanstack_react_query__WEBPACK_IMPORTED_MODULE_0__, _trpc_react_query__WEBPACK_IMPORTED_MODULE_1__, _trpc_react_query_shared__WEBPACK_IMPORTED_MODULE_2__, _trpc_server_shared__WEBPACK_IMPORTED_MODULE_5__]);\n([_tanstack_react_query__WEBPACK_IMPORTED_MODULE_0__, _trpc_react_query__WEBPACK_IMPORTED_MODULE_1__, _trpc_react_query_shared__WEBPACK_IMPORTED_MODULE_2__, _trpc_server_shared__WEBPACK_IMPORTED_MODULE_5__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\n\n\nfunction transformQueryOrMutationCacheErrors(result) {\n    const error = result.state.error;\n    if (error instanceof Error && error.name === 'TRPCClientError') {\n        const newError = {\n            message: error.message,\n            data: error.data,\n            shape: error.shape\n        };\n        return {\n            ...result,\n            state: {\n                ...result.state,\n                error: newError\n            }\n        };\n    }\n    return result;\n}\nfunction withTRPC(opts) {\n    const { config: getClientConfig  } = opts;\n    return (AppOrPage)=>{\n        const trpc = (0,_trpc_react_query__WEBPACK_IMPORTED_MODULE_1__.createReactQueryHooks)(opts);\n        const WithTRPC = (props)=>{\n            const [prepassProps] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)(()=>{\n                if (props.trpc) {\n                    return props.trpc;\n                }\n                const config = getClientConfig({});\n                const queryClient = (0,_trpc_react_query_shared__WEBPACK_IMPORTED_MODULE_2__.getQueryClient)(config);\n                const trpcClient = trpc.createClient(config);\n                return {\n                    abortOnUnmount: config.abortOnUnmount,\n                    queryClient,\n                    trpcClient,\n                    ssrState: opts.ssr ? 'mounting' : false,\n                    ssrContext: null\n                };\n            });\n            const { queryClient , trpcClient , ssrState , ssrContext  } = prepassProps;\n            // allow normal components to be wrapped, not just app/pages\n            let hydratedState;\n            if (props.pageProps) {\n                hydratedState = trpc.useDehydratedState(trpcClient, props.pageProps.trpcState);\n            }\n            return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_3__.createElement(trpc.Provider, {\n                abortOnUnmount: prepassProps.abortOnUnmount ?? false,\n                client: trpcClient,\n                queryClient: queryClient,\n                ssrState: ssrState,\n                ssrContext: ssrContext\n            }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_3__.createElement(_tanstack_react_query__WEBPACK_IMPORTED_MODULE_0__.QueryClientProvider, {\n                client: queryClient\n            }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_3__.createElement(_tanstack_react_query__WEBPACK_IMPORTED_MODULE_0__.Hydrate, {\n                state: hydratedState\n            }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_3__.createElement(AppOrPage, Object.assign({}, props)))));\n        };\n        if (AppOrPage.getInitialProps || opts.ssr) {\n            WithTRPC.getInitialProps = async (appOrPageCtx)=>{\n                const AppTree = appOrPageCtx.AppTree;\n                // Determine if we are wrapping an App component or a Page component.\n                const isApp = !!appOrPageCtx.Component;\n                const ctx = isApp ? appOrPageCtx.ctx : appOrPageCtx;\n                // Run the wrapped component's getInitialProps function.\n                let pageProps = {};\n                if (AppOrPage.getInitialProps) {\n                    const originalProps = await AppOrPage.getInitialProps(appOrPageCtx);\n                    const originalPageProps = isApp ? originalProps.pageProps ?? {} : originalProps;\n                    pageProps = {\n                        ...originalPageProps,\n                        ...pageProps\n                    };\n                }\n                const getAppTreeProps = (props)=>isApp ? {\n                        pageProps: props\n                    } : props;\n                if (typeof window !== 'undefined' || !opts.ssr) {\n                    return getAppTreeProps(pageProps);\n                }\n                const config = getClientConfig({\n                    ctx\n                });\n                const trpcClient = (0,_trpc_react_query__WEBPACK_IMPORTED_MODULE_1__.createTRPCClient)(config);\n                const queryClient = (0,_trpc_react_query_shared__WEBPACK_IMPORTED_MODULE_2__.getQueryClient)(config);\n                const trpcProp = {\n                    config,\n                    trpcClient,\n                    queryClient,\n                    ssrState: 'prepass',\n                    ssrContext: ctx\n                };\n                const prepassProps = {\n                    pageProps,\n                    trpc: trpcProp\n                };\n                // Run the prepass step on AppTree. This will run all trpc queries on the server.\n                // multiple prepass ensures that we can do batching on the server\n                while(true){\n                    // render full tree\n                    await react_ssr_prepass__WEBPACK_IMPORTED_MODULE_4__(/*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_3__.createElement)(AppTree, prepassProps));\n                    if (!queryClient.isFetching()) {\n                        break;\n                    }\n                    // wait until the query cache has settled it's promises\n                    await new Promise((resolve)=>{\n                        const unsub = queryClient.getQueryCache().subscribe((event)=>{\n                            if (event?.query.getObserversCount() === 0) {\n                                resolve();\n                                unsub();\n                            }\n                        });\n                    });\n                }\n                const dehydratedCache = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_0__.dehydrate)(queryClient, {\n                    shouldDehydrateQuery () {\n                        // makes sure errors are also dehydrated\n                        return true;\n                    }\n                });\n                // since error instances can't be serialized, let's make them into `TRPCClientErrorLike`-objects\n                const dehydratedCacheWithErrors = {\n                    ...dehydratedCache,\n                    queries: dehydratedCache.queries.map(transformQueryOrMutationCacheErrors),\n                    mutations: dehydratedCache.mutations.map(transformQueryOrMutationCacheErrors)\n                };\n                // dehydrate query client's state and add it to the props\n                pageProps.trpcState = trpcClient.runtime.combinedTransformer.output.serialize(dehydratedCacheWithErrors);\n                const appTreeProps = getAppTreeProps(pageProps);\n                const meta = opts.responseMeta?.({\n                    ctx,\n                    clientErrors: [\n                        ...dehydratedCache.queries,\n                        ...dehydratedCache.mutations\n                    ].map((v)=>v.state.error).flatMap((err)=>err instanceof Error && err.name === 'TRPCClientError' ? [\n                            err\n                        ] : [])\n                }) || {};\n                for (const [key, value] of Object.entries(meta.headers || {})){\n                    if (typeof value === 'string') {\n                        ctx.res?.setHeader(key, value);\n                    }\n                }\n                if (meta.status && ctx.res) {\n                    ctx.res.statusCode = meta.status;\n                }\n                return appTreeProps;\n            };\n        }\n        const displayName = AppOrPage.displayName || AppOrPage.name || 'Component';\n        WithTRPC.displayName = `withTRPC(${displayName})`;\n        return WithTRPC;\n    };\n}\n\n/* istanbul ignore file -- @preserve */ // We're testing this through E2E-testing\nfunction createTRPCNext(opts) {\n    const hooks = (0,_trpc_react_query_shared__WEBPACK_IMPORTED_MODULE_2__.createHooksInternal)(opts);\n    // TODO: maybe set TSSRContext to `never` when using `WithTRPCNoSSROptions`\n    const _withTRPC = withTRPC(opts);\n    return (0,_trpc_server_shared__WEBPACK_IMPORTED_MODULE_5__.createFlatProxy)((key)=>{\n        if (key === 'useContext') {\n            return ()=>{\n                const context = hooks.useContext();\n                // create a stable reference of the utils context\n                return (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(()=>{\n                    return (0,_trpc_react_query_shared__WEBPACK_IMPORTED_MODULE_2__.createReactQueryUtilsProxy)(context);\n                }, [\n                    context\n                ]);\n            };\n        }\n        if (key === 'useQueries') {\n            return hooks.useQueries;\n        }\n        if (key === 'withTRPC') {\n            return _withTRPC;\n        }\n        return (0,_trpc_react_query_shared__WEBPACK_IMPORTED_MODULE_2__.createReactProxyDecoration)(key, hooks);\n    });\n}\n\n\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@trpc/next/dist/index.mjs\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("./src/pages/index.tsx"));
module.exports = __webpack_exports__;

})();